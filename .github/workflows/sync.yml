name: Sync Main Branch with Upstream (Rebase Local Changes)

on:
  schedule:
    # Run every 6 hours
    - cron: '0 */6 * * *'
  workflow_dispatch: # Allows manual trigger

jobs:
  sync-main:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout with full history
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Setup Go (for packwiz)
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Install packwiz
        run: go install github.com/packwiz/packwiz@latest

      - name: Add upstream remote
        run: |
          git remote add upstream https://github.com/ChloeTax/hexxy4.git || true

      - name: Fetch all changes
        run: |
          git fetch upstream
          git fetch origin

      - name: Check sync status and perform sync with packwiz
        run: |
          git checkout main
          BEHIND=$(git rev-list --count HEAD..upstream/main)
          AHEAD=$(git rev-list --count upstream/main..HEAD)
          
          if [ $BEHIND -gt 0 ] && [ $AHEAD -gt 0 ]; then
            echo "Main has $AHEAD local commits and is $BEHIND commits behind upstream - rebasing and updating packwiz"
            
            # Rebase local changes onto upstream
            git rebase -X theirs upstream/main
            
            # Run packwiz refresh after rebase
            packwiz refresh --build
            
            # Check if packwiz made changes and commit them
            if ! git diff --quiet; then
              git add .
              git commit -m "chore: rebase onto upstream and refresh packwiz

              - Rebased $AHEAD local commits onto upstream/main
              - Synced $BEHIND upstream commits  
              - Updated modpack files via packwiz refresh
              - May include mod updates, hash changes, and metadata updates

              [skip ci]"
            fi
            
            # Push the rebased commits (including packwiz changes if any)
            git push origin main --force-with-lease
            
          elif [ $BEHIND -gt 0 ]; then
            echo "Main is $BEHIND commits behind upstream with no local changes - fast-forwarding and updating packwiz"
            
            # Fast-forward merge
            git merge --ff-only upstream/main
            
            # Run packwiz refresh after fast-forward
            packwiz refresh --build
            
            # Check if packwiz made changes and commit them
            if ! git diff --quiet; then
              git add .
              git commit -m "chore: sync with upstream and refresh packwiz

              - Fast-forwarded $BEHIND upstream commits
              - Updated modpack files via packwiz refresh
              - May include mod updates, hash changes, and metadata updates

              [skip ci]"
            fi
            
            # Push the updated main (including packwiz changes if any)
            git push origin main
            
          else
            echo "Main is up to date with upstream - no sync needed"
          fi
